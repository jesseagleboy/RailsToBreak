---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import axios from "axios";

const cookie = Astro.request.headers.get("cookie");
const response = await axios.get("https://astro-rails.onrender.com/posts.json", { headers: { cookie: cookie } }).catch(err => {
	return { data: { posts: [], current_user: null } };
});
console.log(response?.data, 'astro response happening')
const posts = response.data?.posts;
const current_user = response.data?.current_user?.email;
const mainGreeting = current_user ? `Recent posts from Astro on Rails` : "Please sign in to see posts";
---

<Layout title='Welcome to Astro.'>
	<main class="prose prose-invert">
		<h3>Welcome to Astro on Rails</h3>
		<h4>{mainGreeting}</h4>
		{current_user && <button><a href='/posts/new'>Create New Post</a></button>}
		<div class='link-card-grid'>
			{
				posts?.map((post: { title: string; body: string; id: any; user_email: string; private: boolean }) => {
					if (post.private && post.user_email != current_user) return;
					return (
						<>
							<Card title={post.title} body={post.body} href={`/posts/${post.id}`} email={post.user_email} current_user={current_user || ""} />
						</>
					);
				})
			}
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		/* font-size: 20px; */
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}

	#test {
		background-color: red;
	}
</style>
